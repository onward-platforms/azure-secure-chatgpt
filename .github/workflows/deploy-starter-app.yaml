name: Deploy Starter Application

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches: [ main ]
    paths:
    - 'apps/starter/**'
    - .github/workflows/deploy-starter-app.yaml
  pull_request:
    branches: [ main ]
    paths:
    - 'apps/starter/**'
    - .github/workflows/deploy-starter-app.yaml
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: App Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/starter

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install SWC dependencies
        run: npm install @next/swc-linux-x64-gnu

      - name: Install dependencies, build and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Prepare deployment files
        run: |
          mkdir -p ./build
          cp -R ./.next/standalone/. ./build
          cp -R ./public ./build/public

      - name: Package Next application for deployment
        run: |
          cd ./build
          zip -r app-code.zip .   

      - name: List directories for diagnostics
        run: |
          ls .
          ls ./.next
          ls ./build

      - name: Upload packaged app as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-code
          path: ${{ github.workspace }}/apps/starter/build/app-code.zip

  deploy:
    name: App Deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/starter

    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: app-code

      - name: Construct AZURE_CREDENTIALS from individual secrets
        run: |
          echo AZURE_CREDENTIALS="{\"clientId\": \"${{ secrets.AZURE_CLIENT_ID }}\", \"clientSecret\": \"${{ secrets.AZURE_CLIENT_SECRET }}\", \"tenantId\": \"${{ secrets.AZURE_TENANT_ID }}\", \"subscriptionId\": \"${{ secrets.AZURE_SUBSCRIPTION_ID }}\"}" >> $GITHUB_ENV

      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEB_APP_NAME }}
          slot-name: 'Production'
          package: ${{ github.workspace }}/app-code.zip
