name: Build Next.js and Deploy to Azure

on:
  push:
    branches: [ main ]
    # paths:
    #   - 'app/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  WEBAPP: app-private-chatgpt-aydgnqft
  GROUP: rg-private-chatgpt-aydgnqft-application
  ACCOUNT: stprivatechatgptaydgnqft
  CONTAINER: app-builds
  EXPIRY_TIME: 10 minutes

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: yarn install
        
      - name: Build with Next.js
        run: npx next build
        
      - name: Zip the entire app
        uses: papeloto/action-zip@v1
        with:
          files: app/
          dest: app.zip
          
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app

      - name: Set SAS token expiration
        run: echo "expiry=`date -u -d "$EXPIRY_TIME" '+%Y-%m-%dT%H:%MZ'`" >> $GITHUB_ENV

      - name: Set blob name
        run: echo "BLOB_NAME=app-${{ github.sha }}.zip" >> $GITHUB_ENV

      # - name: Azure CLI script
      #   uses: azure/CLI@v1
      #   with:
      #     azcliversion: 2.30.0
      #     inlineScript: |
      #       az extension add --name webapp
      #       # Generate a SAS token for blob upload with write permissions
      #       SAS_TOKEN=$(az storage blob generate-sas --account-name $ACCOUNT --container-name $CONTAINER --name $BLOB_NAME --permissions w --expiry ${{ env.expiry }} --https-only)

      #       # Upload the blob using the generated SAS token
      #       az storage blob upload --auth-mode login -f app.zip --account-name $ACCOUNT -c $CONTAINER -n $BLOB_NAME --metadata build_number=${{ github.run_number }} run_number=${{ github.run_id }} commit_message="${{ github.event.head_commit.message }}" commit_author="${{ github.actor }}" event_type="${{ github.event_name }}"
      #       ZIP_URL=$(az storage blob url --auth-mode login --account-name $ACCOUNT -c $CONTAINER -n $BLOB_NAME)
      #       az webapp deploy --name $WEBAPP --resource-group $GROUP --type zip --src-url $ZIP_URL --async false


      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az extension add --name webapp
            az storage blob upload --auth-mode login -f app.zip --account-name $ACCOUNT -c $CONTAINER -n $BLOB_NAME --metadata build_number=${{ github.run_number }} run_number=${{ github.run_id }} commit_message="${{ github.event.head_commit.message }}" commit_author="${{ github.actor }}" event_type="${{ github.event_name }}"
            ZIP_URL=$(az storage blob generate-sas --full-uri --permissions r --expiry ${{ env.expiry }} --account-name $ACCOUNT -c $CONTAINER -n $BLOB_NAME | xargs)
            az webapp deploy --name $WEBAPP --resource-group $GROUP --type zip --src-url $ZIP_URL --async false
